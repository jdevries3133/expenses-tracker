{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPoints","dataPoint","ExpensesChart","chartDataPoints","Number","MIN_VALUE","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8dd1b199.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n    // Individual states for each data in expense list\r\n    const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n    const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n    const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n    // Single state to manage all data in expense list\r\n    // const [userInput, setUserInput] = useState({\r\n    //     enteredTitle: \"\",\r\n    //     enteredAmount: \"\",\r\n    //     enteredDate: \"\",\r\n    // });\r\n\r\n    const titleChangeHandler = (event) => {\r\n        // Update state when using individual states\r\n        setEnteredTitle(event.target.value);\r\n\r\n        // Update state when using single useState\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredTitle: event.target.value,\r\n        // })\r\n\r\n        // Better and safer way to ensure react always uses the lastest snapshot of our state and updates it\r\n        // setUserInput((prevState) => {\r\n        //     return { ...prevState, enteredTitle: event.target.value };\r\n        // });\r\n    };\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredAmount: event.target.value,\r\n        // });\r\n        // setUserInput((prevState) => {\r\n        //     return { ...prevState, enteredAmount: event.target.value };\r\n        // });\r\n    };\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredDate: event.target.value,\r\n        // });\r\n        // setUserInput((prevState) => {\r\n        //     return { ...prevState, enteredDate: event.target.value };\r\n        // });\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: enteredAmount,\r\n            date: new Date(enteredDate),\r\n        };\r\n\r\n        props.onSaveExpenseData(expenseData);\r\n        setEnteredTitle(\"\");\r\n        setEnteredAmount(\"\");\r\n        setEnteredDate(\"\");\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={enteredTitle}\r\n                        onChange={titleChangeHandler}\r\n                    />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        min=\"0.01\"\r\n                        step=\"0.01\"\r\n                        value={enteredAmount}\r\n                        onChange={amountChangeHandler}\r\n                    />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        min=\"2019-01-01\"\r\n                        max=\"2022-12-31\"\r\n                        value={enteredDate}\r\n                        onChange={dateChangeHandler}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const onSaveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString(),\r\n        };\r\n        props.onAddExpense(expenseData);\r\n        setIsEditing(false);\r\n    };\r\n\r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n    };\r\n\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"new-expense\">\r\n            {!isEditing && (\r\n                <button onClick={startEditingHandler}>Add New Expense</button>\r\n            )}\r\n            {isEditing && (\r\n                <ExpenseForm\r\n                    onSaveExpenseData={onSaveExpenseDataHandler}\r\n                    onCancel={stopEditingHandler}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n    const dropdownChangeHandler = (event) => {\r\n        props.onChangeFilter(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"expenses-filter\">\r\n            <div className=\"expenses-filter__control\">\r\n                <label>Filter by year</label>\r\n                <select value={props.selected} onChange={dropdownChangeHandler}>\r\n                    <option value=\"2022\">2022</option>\r\n                    <option value=\"2021\">2021</option>\r\n                    <option value=\"2020\">2020</option>\r\n                    <option value=\"2019\">2019</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props) {\r\n    const month = props.date.toLocaleString(\"en-us\", { month: \"long\" });\r\n    const day = props.date.toLocaleString(\"en-us\", { day: \"2-digit\" });\r\n    const year = props.date.getFullYear();\r\n\r\n    return (\r\n        <div className='expense-date'>\r\n            <div className='expense-date__month'>{month}</div>\r\n            <div className='expense-date__year'>{year}</div>\r\n            <div className='expense-date__day'>{day}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\n\r\nimport './Card.css';\r\n\r\nfunction Card(props) {\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\n\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nfunction ExpenseItem(props) {\r\n    return (\r\n        <li>\r\n            <Card className=\"expense-item\">\r\n                <ExpenseDate date={props.date} />\r\n                <div className=\"expense-item__description\">\r\n                    <h2>{props.title}</h2>\r\n                    <div className=\"expense-item__price\">${props.amount}</div>\r\n                </div>\r\n            </Card>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\n\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n    if(props.items.length === 0) {\r\n        return <h2 className=\"expenses-list__fallback\">No expenses found</h2>\r\n    }\r\n\r\n    return <ul className=\"expenses-list\">\r\n        {props.items.map((expense) => (\r\n            <ExpenseItem\r\n                key={expense.id}\r\n                title={expense.title}\r\n                amount={expense.amount}\r\n                date={expense.date}\r\n            />\r\n        ))}\r\n    </ul>;\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = \"0%\";\r\n\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\n\r\nimport ChartBar from \"./ChartBar\";\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map((dataPoint) => (\r\n                <ChartBar\r\n                    key={dataPoint.label}\r\n                    value={dataPoint.value}\r\n                    maxValue={props.maxValue}\r\n                    label={dataPoint.label}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\n\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n    const chartDataPoints = [\r\n        { label: \"Jan\", value: 0 },\r\n        { label: \"Feb\", value: 0 },\r\n        { label: \"Mar\", value: 0 },\r\n        { label: \"Apr\", value: 0 },\r\n        { label: \"May\", value: 0 },\r\n        { label: \"Jun\", value: 0 },\r\n        { label: \"Jul\", value: 0 },\r\n        { label: \"Aug\", value: 0 },\r\n        { label: \"Sep\", value: 0 },\r\n        { label: \"Oct\", value: 0 },\r\n        { label: \"Nov\", value: 0 },\r\n        { label: \"Dec\", value: 0 },\r\n    ];\r\n\r\n    let max = Number.MIN_VALUE;\r\n\r\n    for (let expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n\r\n        if (expense.amount > max) max = expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints} maxValue={max} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\n\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\n\r\nfunction Expenses(props) {\r\n    const [filteredYear, setFilteredYear] = useState(\"2021\");\r\n\r\n    const filterChangeHandler = (selectedYear) => {\r\n        setFilteredYear(selectedYear);\r\n    };\r\n\r\n    const filteredExpenses = props.items.filter((expense) => {\r\n        return filteredYear === expense.date.getFullYear().toString();\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"expenses\">\r\n                <ExpensesFilter\r\n                    selected={filteredYear}\r\n                    onChangeFilter={filterChangeHandler}\r\n                />\r\n                <ExpensesChart expenses={filteredExpenses} />\r\n                <ExpensesList items={filteredExpenses} />\r\n                {\r\n                    // if condition is met, JS returns the last expression\r\n                    // filteredExpenses.length === 0 && <p>No expenses found</p>\r\n                }\r\n                {/* filteredExpenses.length > 0 &&\r\n                    filteredExpenses.map((expense) => (\r\n                        <ExpenseItem\r\n                            key={expense.id}\r\n                            title={expense.title}\r\n                            amount={expense.amount}\r\n                            date={expense.date}\r\n                        />\r\n                    )) */}\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\n\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst DUMMY_EXPENSES = [\n    {\n        id: \"e1\",\n        title: \"Toilet Paper\",\n        amount: 94.12,\n        date: new Date(2020, 7, 14),\n    },\n    {\n        id: \"e2\",\n        title: \"New TV\",\n        amount: 799.49,\n        date: new Date(2021, 2, 12),\n    },\n    {\n        id: \"e3\",\n        title: \"Car Insurance\",\n        amount: 294.67,\n        date: new Date(2021, 2, 28),\n    },\n    {\n        id: \"e4\",\n        title: \"New Desk (Wooden)\",\n        amount: 450,\n        date: new Date(2021, 5, 12),\n    },\n];\n\nfunction App() {\n    const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n    const addExpenseHandler = (expense) => {\n        setExpenses((prevExpenses) => {\n            return [expense, ...prevExpenses];\n        });\n    };\n\n    return (\n        <div>\n            <NewExpense onAddExpense={addExpenseHandler} />\n            <Expenses items={expenses} />\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\n\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}